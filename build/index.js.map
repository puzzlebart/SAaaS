{"version":3,"sources":["../src/index.js"],"names":["process","platform","require","config","app","use","req","res","next","header","superSecretApiKeys","env","APIKEYS","split","doEnterpriseLevelSecurityCheck","randomize","min","max","Math","round","random","get","redirect","json","version","message","list","APIS","executeAPI","api","apiName","url","substring","shittyApi","filter","a","name","getData","console","log","axios","response","data","send","search","EnterpriseLevelSecurityCheck","then","passed","q","query","error","length","decodeURIComponent","toLowerCase","matches","SaaSData","char","Name","occupation","Occupation","indexOf","Promise","resolve","reject","headers","apikey","includes","capitalize","s","charAt","toUpperCase","slice","matchesAnAPI","listen","PORT"],"mappings":"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","sourcesContent":["// @ts-ignore\nimport APIS from \"./apis.json\";\nimport express from 'express'; // framework, yo\nimport cheerio from 'cheerio';\nif (process.platform === \"darwin\") { require(\"dotenv\").config() } // enterprise-grade MacOS-detection\nconst app = express() // express app instance\n\n\n\n\n//CORS\napp.use(function (req, res, next) {\n    res.header(\"Access-Control-Allow-Origin\", \"*\");\n    // Remember to have apikey here, else our enterprise-grade authorization-system will fail\n    res.header(\"Access-Control-Allow-Headers\", \"Origin, X-Requested-With, Content-Type, Content-Length, Cache-Control, Accept, apikey\");\n    next();\n});\n\n\n// MICKEY MOUSE ENTERPRISE-GRADE SECURITY AS A SERVICE\nconst superSecretApiKeys = process.env.APIKEYS.split(\",\")\nconst doEnterpriseLevelSecurityCheck = true;\n// ENTERPRISE GRADE RANDOMIZATION ENGINE\nconst randomize = (min, max) => Math.round((Math.random() * (max - min) + min))\n\n// TIHIaaS -  Thanks, I hate it as a Service\napp.get('/tihi', (req, res) => { res.redirect(\"https://www.youtube.com/watch?v=-Lez_WdX7Oc\") })\n\n// version\napp.get(\"/version\", (req, res) => { res.json({ version: \"1.0.0\" }) })\n\n// DaaS - DÂ´oh! as a Service\napp.get('/doh', (req, res) => { res.json({ message: \"D'oh!\" }) }) // D'oh!\n\napp.get('/get', (req, res) => {\n\n}) // D'oh!\n\n\n// list all created apis\nlet list = app.get(\"/list\", (req, res) => {\n    res.json(APIS)\n})\n\n\n//Do lol stuff here with cheerio\nfunction executeAPI(req, res, api) {\n    let apiName = req.url.substring(1);\n    let shittyApi = APIS.filter(a=>a.name===apiName) // we already know it exists 'cause we checked right\n    const url = shittyApi.url;\n    const getData = async url => {\n        try {\n            console.log(`trying to fetch ${shittyApi.url}`)\n            const response = await axios.get(url);\n            const data = response.data;\n            console.log(data);\n        } catch (error) {\n            console.log(error);\n        }\n    };\n    let data = getData(url);\n    if(data)\n    res.send(data)\n}\n\n\n\n\n// SEARCH FUNCTION YEAOIAUSODIUASDOIS\nlet search = app.get([\"/search\", \"/find\"], (req, res) => {\n    EnterpriseLevelSecurityCheck(req, res).then(passed => {\n        let q = req.query.q;\n        if (!q) res.json({ error: \"no query specified. use ?q=[querystring]\" })\n        if (q.length < 3) { res.json({ message: \"type at least three characters to search\" }) } else {\n            q = decodeURIComponent(q.toLowerCase());\n            let matches = SaaSData.filter(char => {\n                let name = char.Name ? char.Name.toLowerCase() : \"\";\n                let occupation = char.Occupation ? char.Occupation.toLowerCase() : \"\";\n                return name.indexOf(q) > -1 || occupation.indexOf(q) > -1\n            })\n            res.json(matches)\n        }\n    })\n})\n\n// ENTERPRISE LEVEL SECURITY ENGINE AUTOMATRON - DO NOT TOUCH IT'S PERFECT THANKS\nfunction EnterpriseLevelSecurityCheck(req, res) {\n    return new Promise((resolve, reject) => {\n        if (!doEnterpriseLevelSecurityCheck || req.get('host').indexOf(\"localhost\") > -1) { resolve(true); return; }\n        if (!req.headers.apikey && !req.query.apikey) {\n            res.json({ error: `NO API KEY SPECIFIED. ASK PUZZLEBART FOR ONE! We're all about sharing :D` })\n            resolve(false)\n        } else {\n            if (superSecretApiKeys.includes(req.headers.apikey) || superSecretApiKeys.includes(req.query.apikey)) { resolve(true) } else {\n                res.json({ error: `WRONG API KEY SPECIFIED - ARE YOU HACKING???!` })\n                resolve(false)\n            }\n        }\n    })\n}\n// END SECURITIFICATION\n\n\n// Stupid sexy jslint\nconst capitalize = (s) => { if (typeof s !== 'string') return ''; return s.charAt(0).toUpperCase() + s.slice(1) }\n\n\n// FRONT PAGE\napp.get('/', (req, res) => {\n    res.send(`<!DOCTYPE html>\n    <html>\n\n    <head>\n        <title>Shitty APIs as a Service</title>\n        <link href=\"//netdna.bootstrapcdn.com/twitter-bootstrap/2.3.2/css/bootstrap-combined.min.css\"\n            rel=\"stylesheet\">\n        <meta name=\"twitter:card\" content=\"summary\">\n        <meta name=\"twitter:creator\" content=\"@Kimzter\">\n        <meta name=\"og:title\" content=\"Shitty APIs as a Service\">\n        <script src=\"//code.jquery.com/jquery-3.1.1.min.js\" type=\"text/javascript\"></script>\n    </head>\n    \n    <body>\n        <div class=\"container\">\n            <div class=\"hero-unit\">\n                <h1>SAaaS</h1>\n                <h2>Shitty APIs as a Service</h2>\n                <p><em>v1.0.0</em></p>\n            </div>\n        </div>\n        <div class=\"container\">\n            <div class=\"content\" style=\"margin-left:50px;\">\n                <h2 id=\"introduction\">Introduction</h2>\n                <p>SAaaS (Shitty APIs as a Service) is a minimalist, opinionated, expressive, scalable API-engine, which enables power users to easily create their own APIS, with only basic html and css-knowledge.</p>\n                <h2 id=\"api\">Create your own API</h2>\n                <h4>go to <a href=\"http://saaas.puzzlebart.no/create\">http://saaas.puzzlebart.no/create</a></h4>\n                <table class=\"table\" id=\"ops\">\n                    <tr>\n                        <th>Path</th>\n                        <th>Description</th>\n                    </tr>\n                    <tr>\n                        <td>/version</td>\n                        <td>Returns the current SAaaS version number.</td>\n                    </tr>\n                    <tr>\n                        <td>/create</td>\n                        <td>WYSIWYG Shitty API-creator</td>\n                    </tr>\n                    <tr>\n                        <td>/new</td>\n                        <td>Create a new Shitty API using the SAaaS API</td>\n                    </tr>\n                    <tr>\n                        <td>/get</td>\n                        <td>Get a Shitty API</td>\n                    </tr>\n                    <tr>\n                        <td>/list</td>\n                        <td>list all Shitty APIs</td>\n                    </tr>\n                    \n                    <tr>\n                        <td>/doh</td>\n                        <td>D'oh! As A Service</td>\n                    </tr>\n                </table>\n                <h3 id=\"operations\">Syntax</h3>\n                <p><b>fetch</b></p>\n                <code>await fetch(\"http://SAaaS.puzzlebart.no/new\",{method:\"POST\",headers:{apikey:\"YOUR_API_KEY\"},body{YOUR_API_DEFINITION}}).then(d=>d.json().then(r=>r))</code>\n                <br/>\n                <br/>\n                <p><b>cURL</b></p>\n                <code>It's 03:30, way too late to write cURL script. fuck it</code>\n                <p></p>\n                <h3 id=\"operations\">Example usage</h3>\n                <p>TODO</p>\n                <p><a href=\"https://github.com/puzzlebart/SAaaS\">Fork us on github!</a></p>\n                <p>Created by <a href=\"https://twitter.com/Kimzter\">@Kimzter</a></p>\n            </div>\n        </div>\n    </body>\n    </html>\n`)\n});\n\nfunction matchesAnAPI(apiName) {\n    console.log(`checking whether the \"${apiName}\" api exists`)\n    let matches = APIS.filter(a => a.name === apiName).length == 1\n    console.log(`api-match: ${matches}`)\n    return matches\n}\n\n// error route\napp.get('(/*)?', (req, res) => {\n    if (matchesAnAPI(req.url.substring(1))) {\n        executeAPI(req, res)\n    } else {\n        res.send(`\n<html>\n<head>\n    <title>Simpsons as a Service</title>\n    <link href=\"//netdna.bootstrapcdn.com/twitter-bootstrap/2.3.2/css/bootstrap-combined.min.css\" rel=\"stylesheet\">\n    <meta name=\"og:title\" content=\"Simpsons As A Service\">\n    <script src=\"//code.jquery.com/jquery-3.1.1.min.js\" type=\"text/javascript\"></script>\n</head>\n<body>\n    <div class=\"container\">\n        <div class=\"hero-unit\">\n            <h1>742 - D'oh!</h1>\n            <h2>This is not the shitty API you are looking for</h2>\n            <p><em>Shitty API as a Service v1.0.0</em></p>\n        </div>\n    </div>\n    <center><a href=\"/\">saas.puzzlebart.no</a>\n    </body></html>`)\n    }\n}) // D'oh!\n\napp.listen(process.env.PORT || '3000', () => console.log(`running on port ${process.env.PORT || '3000'}`))"],"file":"index.js"}